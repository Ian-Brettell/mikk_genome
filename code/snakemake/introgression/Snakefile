# Bash script to run on EBI cluster:
#
# cd /hps/research1/birney/users/ian/opto_res/cos_opto_res
# conda activate snakemake
# snakemake \
#   --jobs 5000 \
#   --latency-wait 100 \
#   --cluster-config code/snakemake/20210203/config/cluster.json \
#   --cluster 'bsub -g /snakemake_bgenie -J {cluster.name} -n {cluster.n} -M {cluster.memory} -o {cluster.output} -e {cluster.error}' \
#   --keep-going \
#   --rerun-incomplete \
#   --use-conda \
#   --use-singularity \
#   -s code/snakemake/20210203/Snakefile \
#   -p

# import functions and packages
import os.path
#import pandas as pd
import glob

# Load config file and provide content as config object

configfile: "code/snakemake/introgression/config/config.yaml"

## Get samples

### Get list of files
files = glob.glob(os.path.join(config["target_dir"], "segmented/*/*.data.txt"))
### get chr and sub_chr
CHRS = []
SUBCHRS = []
SEGMENTS = []
STRANDS = []
for file in files:
    CHRS.append(file.split('/')[4].split('_')[0])
    SUBCHRS.append(file.split('/')[4].split('_')[1])
    target_segment = file.split('/')[5].split('_')[0:3]
    SEGMENTS.append("_".join(target_segment))
    STRANDS.append(file.split('/')[5].split('_')[3].split('.')[0])


# Rules

rule all:
    input:
        expand(os.path.join(config["target_dir"], "cleaned/{chr}_{subchr}/{segment}_{strand}.txt"),
                zip,
                chr = CHRS,
                subchr = SUBCHRS,
                segment = SEGMENTS,
                strand = STRANDS),
        expand(os.path.join(config["target_dir"], "consolidated/{chr}_{subchr}.txt"),
                zip,
                chr = CHRS,
                subchr = SUBCHRS)

rule add_hdrr_coords:
    input:
        os.path.join(config["target_dir"], "segmented/{chr}_{subchr}/{segment}_{strand}.data.txt")
    output:
        os.path.join(config["target_dir"], "cleaned/{chr}_{subchr}/{segment}_{strand}.txt")
    params:
        command = lambda wildcards: "Rscript --no-save --no-restore --no-environ --no-site-file " + config['add_coord_script_forward'] + " $input $output" if wildcards.strand == "1" else "tmp_file=../tmp/" + wildcards.segment + "_" + wildcards.strand + ".data.txt ; tac $input > $tmp_file ; Rscript --no-save --no-restore --no-environ --no-site-file " + config['add_coord_script_reverse'] + " $tmp_file $input $output"
    singularity:
        config["sing_cont_r"]
    shell:
        "input={input}; output={output}; {params.command}"

rule consolidate_subchrs:
    input:
        os.path.join(config["target_dir"], "cleaned/{chr}_{subchr}")
    output:
        os.path.join(config["target_dir"], "consolidated/{chr}_{subchr}.txt")
 #   params:
 #       in_dir = lambda wildcards: os.path.join(config["target_dir"], "cleaned", wildcards.chr + "_" wildcards.subchr)
    singularity:
        config["sing_cont_r"]        
    shell:
        "Rscript --no-save --no-restore --no-environ --no-site-file {config[consol_subchr_script]} {input} {output}"
